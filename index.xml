<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home Page on ilikechicken</title><link>http://ilikechicken.me/</link><description>Recent content in Home Page on ilikechicken</description><generator>Hugo</generator><language>en-us</language><atom:link href="http://ilikechicken.me/index.xml" rel="self" type="application/rss+xml"/><item><title>Cu There</title><link>http://ilikechicken.me/portfolio/cu-there/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/portfolio/cu-there/</guid><description>&lt;p>Winner of Best Beginner in NHacks VII.&lt;/p>
&lt;h2 id="inspiration">Inspiration&lt;/h2>
&lt;p>Our team searched for an idea for the student service app for this hackathon. During this process, we were quite perplexed because of the fact that many of the ideas were already put into effect on other apps. While I was thinking about how my sister was graduating high school, I thought about how stressful it was to be a student heading into a post-secondary environment. That is when the idea of CU There was conceived. We wanted to make an organization app for students to compare what their needs were and what school they were comfortable with going to.&lt;/p></description></item><item><title>EntryMail</title><link>http://ilikechicken.me/portfolio/email-checker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/portfolio/email-checker/</guid><description>&lt;h2 id="inspiration">Inspiration&lt;/h2>
&lt;p>When we&amp;rsquo;re thinking of our problems in school, the notion of clubs arose. Unfortunately, our school clubs were not managed thoroughly and were not secure, and trolls and anonymous users will often disrupt the club on the club Discord server. That&amp;rsquo;s when the idea for EntryEmail was conceived.&lt;/p>
&lt;h2 id="what-it-does">What it does&lt;/h2>
&lt;p>Since clubs mostly take place in discord servers, we believed that our project should be related to discord. So we created a discord bot that allows for secure verification in the form of email. EntryEmail is a safe and efficient bot that allows for the denial of bots and trolls. This system restricts access and inspection of certain discord channels. The way to unlock this system would be to verify your email with the school domain and retrieve the code. This code can be entered into the bot, granting you full access to the discord server. This process ensures complete security and guarantees that your discord server cannot be intruded upon. The bot also allows for other features, such as customizing a list of domains you wish to enter, which can filter through bots and trolls. Moderators can also inspect the emails of users that enter to verify them more. EntryEmail is easy to deploy and is a great way to establish an advanced safeguard which protects data privacy and privacy in general for school clubs and communities.&lt;/p></description></item><item><title>File Extension Analyzer</title><link>http://ilikechicken.me/tools/file-extension-analyzer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/tools/file-extension-analyzer/</guid><description>&lt;script defer>
async function onSubmit(event) {
 event.preventDefault();
 let file = document.getElementById('file');
 let result = document.getElementById('result');
 let tbody = document.getElementById('tbody');
 let msg = document.getElementById('msg');

 if (file.files.length === 0) {
 msg.innerHTML = "Please select a file.";
 return;
 }

 let data = new FormData();
 data.append('file', file.files[0]);

 let dataReturned = await fetch('https://trid.tools.ilikechicken.me/upload', {
 method: 'POST',
 body: data
 })

 if (dataReturned.status !== 200) {
 msg.innerHTML = "Error: " + dataReturned.status;
 return;
 }

 let dataJson = await dataReturned.json();


 msg.innerHTML = "";
 tbody.innerHTML = "";

 if (dataJson.msg &amp;&amp; dataJson.msg === "File is in plain text") {
 msg.innerHTML = "File is in plain text";
 return;
 }

 for (let i = 0; i &lt; dataJson.probabilities.length; i++) {
 let tr = document.createElement('tr');
 let td1 = document.createElement('td');
 let td2 = document.createElement('td');
 let td3 = document.createElement('td');
 td1.innerHTML = i+1;
 td2.innerHTML = dataJson.probabilities[i].name;
 td3.innerHTML = dataJson.probabilities[i].probability;
 tr.appendChild(td1);
 tr.appendChild(td2);
 tr.appendChild(td3);
 tbody.appendChild(tr);
 }
}

&lt;/script>
&lt;input onchange="onSubmit(event)" type="file" id="file" name="file" class="form-control" style="display: inline">
&lt;h2 id="msg" style="margin-top: 10px">&lt;/h2>
&lt;div id="result">
 &lt;table class="table file-table">
 &lt;thead>
 &lt;tr>
 &lt;th scope="col">#&lt;/th>
 &lt;th scope="col">File Extension&lt;/th>
 &lt;th scope="col">Probability&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody id="tbody">
 &lt;/tbody>
 &lt;/table>
&lt;/div></description></item><item><title>Format numbers in Javascript</title><link>http://ilikechicken.me/blogs/format-numbers-in-js/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/blogs/format-numbers-in-js/</guid><description>&lt;p>Now, you can just use .toLocaleString() to format a number in any way you like.
Back then you would need a custom function to do that for you, now you can do it directly.
Just call this function and it will return the string for you, and you can print it or save it for later use.&lt;/p></description></item><item><title>Git Logging Github Accounts With 2FA</title><link>http://ilikechicken.me/blogs/git-logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/blogs/git-logging/</guid><description>&lt;p>if you have 2FA for your Github account activated, it will be annoying to access your private repositories through git, since your password wouldn&amp;rsquo;t work anymore.&lt;/p>
&lt;p>What you want to do is that to make a token specifically for whatever you are doing.
Go to settings -&amp;gt; developer settings -&amp;gt; tokens and generate the token. With the token, you can now login in through git.
Make sure to save the token somewhere if you want to use it again as it won&amp;rsquo;t appear on the website again and you can only generate a new token.&lt;/p></description></item><item><title>How to connect to github</title><link>http://ilikechicken.me/blogs/connect-to-github/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/blogs/connect-to-github/</guid><description>&lt;p>When using git, it is a hassle to retype the password every time we commit. Of course, you can always save the password locally on the disk, like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>git config credential.helper store
&lt;/code>&lt;/pre>&lt;p>The problem with this method is that the password is stored in plain text locally, which can be a security concern if your device gets stolen.&lt;br>
A more secure method would be to set a time-out for the password cache. For example, something like this would expire the password after 1 hour:&lt;/p></description></item><item><title>How to connect to your Pythonanywhere database remotely</title><link>http://ilikechicken.me/blogs/remote-pythonanywhere-database/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/blogs/remote-pythonanywhere-database/</guid><description>&lt;p>Pythonanywhere is an excellent place to run your python code and your website, it offers multiple consoles and database.&lt;br>
When you are debugging your code, and it uses a database, such as a website, it can be quite tedious to set up another mysql server when you don’t have another cloud service such as Azure or AWS. In that case, you can just use the database from Pythonanywhere.&lt;/p>
&lt;p>The database can’t be directly connected, so that you would need SSH tunneling. Open up a terminal, type:&lt;/p></description></item><item><title>How to dupilicate a python list</title><link>http://ilikechicken.me/blogs/duplicate-list-in-python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/blogs/duplicate-list-in-python/</guid><description>&lt;p>If you want a copy of a list, you might do this:&lt;/p>
&lt;pre tabindex="0">&lt;code>list1 = list2
&lt;/code>&lt;/pre>&lt;p>if you alter values in list2, you would find that the values in list1 also changed. This is because that list2 is a shallow copy of list1.&lt;br>
A shallow copy is when you only copy the reference of a variable, meaning that list1 and list2 are essentially the same variables, just that it has two different names.&lt;/p></description></item><item><title>How to freely and accurately OCR PDFs</title><link>http://ilikechicken.me/blogs/ocr-pdfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/blogs/ocr-pdfs/</guid><description>&lt;p>Many times when someone sends you a pdf of a scanned or a picture of a document, you can&amp;rsquo;t copy texts off of the pdf, nor searching for keywords. It becomes very frustrating to process the document. Here is something I found that can easily make computers process the work.&lt;/p>
&lt;p>I searched many &amp;ldquo;free online OCR scanners&amp;rdquo;, but they don&amp;rsquo;t seem to work very well. After some research, I found: ocrmypdf.&lt;/p></description></item><item><title>How to get a procedure's definition in MSSQL</title><link>http://ilikechicken.me/blogs/get-procedure-definition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/blogs/get-procedure-definition/</guid><description>&lt;p>If you are new to a legacy database and want to learn more about its internals, sometimes it&amp;rsquo;s good to read the definitions of stored procedures.
It can teach you what standard to follow and how exactly are the data stored. To do this, run the following query:&lt;/p>
&lt;pre tabindex="0">&lt;code>sp_helptext PROCEDURE
&lt;/code>&lt;/pre>&lt;p>This should get you the definitions.&lt;/p></description></item><item><title>How to make elements fixed on the screen</title><link>http://ilikechicken.me/blogs/element-fixed-on-screen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/blogs/element-fixed-on-screen/</guid><description>&lt;p>If you want something to always float on the screen, not affected by other elements, you can achieve this using CSS:&lt;/p>
&lt;pre tabindex="0">&lt;code>.element{
 position: fixed,
}
&lt;/code>&lt;/pre>&lt;p>This way, you can set an element to be fixed on the screen.&lt;/p></description></item><item><title>How to strip html tags in Django</title><link>http://ilikechicken.me/blogs/django-strip-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/blogs/django-strip-html/</guid><description>&lt;p>Many times, you would want to strip the html tags away from a string and only leave plain text. This can be accomplished by using libraries such as BeautifulSoup, but it can also be accomplished using regex:&lt;/p>
&lt;pre tabindex="0">&lt;code>String target = someString.replaceAll(&amp;#34;&amp;lt;[^&amp;gt;]*&amp;gt;&amp;#34;, &amp;#34;&amp;#34;);
Syntax can be different depending on the language, but it should look something like that.
&lt;/code>&lt;/pre>&lt;p>Django already has a built-in function for this. It uses regex as well for less hassle.&lt;/p></description></item><item><title>ilikechicken.me</title><link>http://ilikechicken.me/portfolio/ilikechicken-me/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/portfolio/ilikechicken-me/</guid><description>&lt;h2 id="about-me">About Me&lt;/h2>
&lt;p>I&amp;rsquo;m a high schooler living in Toronto who is highly interested in CS. I liked to tinker with computers when I was really young and kept the interest until now. I&amp;rsquo;m looking for any CS-related volunteer or intern opportunities, as well as learning more about the field and the future of technology. If you have any questions or want to get in touch, please feel free to contact me.&lt;/p></description></item><item><title>IMHP</title><link>http://ilikechicken.me/portfolio/imhp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/portfolio/imhp/</guid><description>&lt;h2 id="about-the-job">About the Job&lt;/h2>
&lt;ul>
&lt;li>Worked as a web developer internship for a branch of sickkids, IMHP&lt;/li>
&lt;li>Used framework such as React, Material-UI, and server-end RESTful API development&lt;/li>
&lt;li>Worked on a team of 5 to develop a web application for a client&lt;/li>
&lt;li>Can ask for recommendation letter if needed&lt;/li>
&lt;/ul></description></item><item><title>Lexis</title><link>http://ilikechicken.me/portfolio/lexis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/portfolio/lexis/</guid><description>&lt;p>Winner of Best Design in LaunchHacks.&lt;/p>
&lt;h2 id="inspiration">Inspiration&lt;/h2>
&lt;p>While we were brainstorming ideas on what we wanted to base our project on for this hackathon, we thought about creating a game that was both fun and educational. We were quite puzzled when confronted with such a simple yet challenging idea. Our team went through countless games that established these two concepts. I thought about how my younger brother had trouble in English class because of the daunting imposition of learning confusing vocabulary. We finally landed on a game that would let you guess how a word was spelled through the pronunciation. We wanted to make a game that was inspired by Wordle but without the limit which allowed for the lobby creator to make as many words as they wished. This would grant teachers or parents a way to teach children how a word sounds and how it is spelled through a point-oriented game. The origin of the name &amp;ldquo;Lexis&amp;rdquo; is the translation of the word &amp;ldquo;Word&amp;rdquo; in Greek.&lt;/p></description></item><item><title>Manim: An Python Animation Engine</title><link>http://ilikechicken.me/blogs/manim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/blogs/manim/</guid><description>&lt;p>If you use Python, you might know a library called Manim. It is first a personal project by 3b1b and you can now (well it always has been open source, but it finally got usable documentation and maintenance recently, around 2020) use it for yourself as well.&lt;/p>
&lt;p>There are two main versions of manim:&lt;/p>
&lt;ul>
&lt;li>3b1b/manim: A version that is used and maintained by 3b1b himself, used in his Youtube videos.&lt;/li>
&lt;li>ManimCommunity: forked from manim in 2020, more stable, document, etc. It is recommended to use this repo for your projects.&lt;/li>
&lt;/ul>
&lt;p>It is easy to get started, a good way to make your own projects, or adding custom animations to your presentation.&lt;/p></description></item><item><title>Recispeed</title><link>http://ilikechicken.me/portfolio/recispeed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/portfolio/recispeed/</guid><description>&lt;h2 id="recispeed">Recispeed&lt;/h2>
&lt;p>Our team is always frustrated when a crucial ingredient is missing while going through recipe books. This is why we developed this reverse search recipe app. In this app, you input everything you have, and it will return a list of recipes you can follow. This app is developed with React and ChakraUI, and dockerized and deployed on hop.io. Hop really made my life a lot easier, because it simplified all the complicated deployment and scales automatically. We will definitely use Hop in our future projects.&lt;/p></description></item><item><title>Sat Preper</title><link>http://ilikechicken.me/portfolio/sat-preper/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/portfolio/sat-preper/</guid><description>&lt;p>A timer that records stats for SAT/ACT. It records the time you took for each question, and it visualizes the data after the test for you to improve your score.&lt;/p></description></item><item><title>Timezone Converter</title><link>http://ilikechicken.me/tools/timezone-converter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/tools/timezone-converter/</guid><description>&lt;script src="http://ilikechicken.me/js/chrono.js" defer>&lt;/script>
&lt;script defer>
let typingTimer;
let doneTypingInterval = 2000;
let input = document.getElementById('time');
let show = document.getElementById('show-time');
let data;
input.addEventListener('keyup', function () {
 clearTimeout(typingTimer);
 if (input.value) {
 typingTimer = setTimeout(doneTyping, doneTypingInterval); 
 }
});
function doneTyping () {
 data = chrono.parseDate(input.value);
 if(data) {
 show.innerHTML = 'Converts to ' + data.toString();
 } else {
 show.innerHTML = "Unable to process the time."
 }
}
&lt;/script>
&lt;input type="text" class="time" id="time" placeholder="Try 'next friday at 2 pm est'">
&lt;h4 id="show-time">&lt;/h4></description></item><item><title>Uconnect</title><link>http://ilikechicken.me/portfolio/uconnect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/portfolio/uconnect/</guid><description>&lt;h2 id="about-the-job">About the Job&lt;/h2>
&lt;p>“Bridging the gap between resource disadvantage and capability to inform future changemakers about the perfect school for them.”&lt;/p>
&lt;p>Founded by grade 11 student Alfred Shi and other members, UConnect is an organization that informs students about post-secondary education and offers options to fit schools. We at UConnect recognize the privilege that came with private education–and the consequent gap between resource disadvantage and capability for other students across the world. Our aim is to give those students who deserve a better chance at higher education an understanding the right university for them and where their capabilities should land them.&lt;/p></description></item><item><title>What Is GraphQL</title><link>http://ilikechicken.me/blogs/graphql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/blogs/graphql/</guid><description>&lt;p>GraphQL is a new data API developed by Facebook.
It can be added directly to your existing databases and provides a clear way to request data.
For example, if you want everyone&amp;rsquo;s name in the database, you can just do:&lt;/p>
&lt;pre tabindex="0">&lt;code>Query query {
 People {
 Name
 Age
 }
}
&lt;/code>&lt;/pre>&lt;p>It is a lot easier to use compared to traditional REST APIs.
The best thing is, you can use more than one database.
For example, you can have your user data stored locally, and have some other information stored somewhere else and accessed through REST APIs.
Even though you only have one REST database, GraphQL can be applied directly to your old codes, without rewriting anything.&lt;/p></description></item><item><title>What is MOSS and How to Use It</title><link>http://ilikechicken.me/blogs/what-is-moss/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/blogs/what-is-moss/</guid><description>&lt;p>If you are a computer science teacher or professor, one of the problems you might have is when your students copy code from each other.
Or if you are investigating someone&amp;rsquo;s code and you want a trustworthy way to compare codes.
MOSS, a code similarity check tool developed by a Stanford student, might help you out here.&lt;/p>
&lt;p>MOSS stands for Measure Of Software Similarity.
It compares two pieces of code and will make a judgment on whether any code looks similar or not.
MOSS is also very conservative on marking similarities, so the actually copied portion of code might be more than the percentage MOSS marked.&lt;/p></description></item><item><title>WSL2: WSL but better</title><link>http://ilikechicken.me/blogs/wsl2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ilikechicken.me/blogs/wsl2/</guid><description>&lt;p>the new WSL(Windows Subsystem Linux) is a nice tool for developers to test and develop projects on a simulated Linux kernel on Windows without running a full VM.
Doing so has many advantages such as requiring less computing power, better file access, etc.&lt;/p>
&lt;p>However, it is not perfect. You might run into weird environment issues because it is not a full Linux distro after all.
For example, 32bit applications cannot run in WSL1, as well as many other limitations.&lt;/p></description></item></channel></rss>